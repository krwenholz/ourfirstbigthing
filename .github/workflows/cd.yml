name: CD
on:
  push:
    branches:
      - master
    paths-ignore:
      - stories*
      - postgres*
      - test*
      - infrastructure*
      - cypress*
      - scripts*

jobs:
  jest:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 11.6
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache cache
        uses: actions/cache@v1
        with:
          path: ~/.cache # some cached files, cypress, are stored here
          key: ${{ runner.os }}-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-${{ env.cache-name }}-
            ${{ runner.os }}-cache-
            ${{ runner.os }}-
      - run: npm install
      - run: npm run jest
  deploy-production:
    runs-on: ubuntu-16.04
    needs: [staging-integration-test]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/checkout@master
      - name: login
        uses: actions/heroku@master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_AUTH_TOKEN_JANUARY_2020 }}
        with:
          args: container:login
      - name: push
        uses: actions/heroku@master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_AUTH_TOKEN_JANUARY_2020 }}
        with:
          args: container:push -a turning-point-tales web
      - name: release
        uses: actions/heroku@master
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_AUTH_TOKEN_JANUARY_2020 }}
        with:
          args: container:release -a turning-point-tales web
